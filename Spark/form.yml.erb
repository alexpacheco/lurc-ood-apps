<%
  result = %x[id]
%>
---
title: "Spark + Jupyter"
cluster: "sol"
description: |
  This app will launch Spark in standalone mode and start a Jupyter Notebook.
attributes:
  modules: "anaconda3/2020.07"
  jupyterlab_switch:
    widget: "check_box"
    label: "Use JupyterLab instead of Jupyter Notebook?"
    help: |
      JupyterLab is the next generation of Jupyter, and is completely compatible with existing Jupyter Notebooks.
  conda_environment: 
    widget: select
    label: Choose the conda environment you want to use
    options:
      - ["Spark", "spark"]
      - ["Do not activate a conda enviroment", "base"]
      - ["biofluids","biofluids"]
      - ["bioinformatics","bioinformatics"]
      - ["biostats","biostats"]
      - ["chem","chem"]
      - ["mldl","mldl"]
      - ["nlp","nlp"]
      - ["r","r"]
  custom_environment:
    widget: text_area
    label: Enter commands to launch another python environment
    help: |
      - anaconda3/2020.07 is loaded by default. Unload it to use another python module`
    value: ""
  custom_queue:
    label: Partition
    help: Please select a partition from the drop-down.
    widget: select
    options:
      - [ "lts partition, 18 cores, 72 hours, 6GB/core", "lts" ]
      - [ "lts-gpu partition, 20 cores, 72 hours, 6GB/core", "lts-gpu" ]
      - [ "eng partition, 22 cores, 72 hours, 5GB/core", "eng" ]
      - [ "eng-gpu partition, 24 cores, 72 hours, 5GB/core", "eng-gpu" ]
      - [ "engc partition, 24 cores, 72 hours, 2.5GB/core", "engc" ]
      - [ "enge partition, 36 cores, 72 hours, 5GB/cores", "enge" ]
      - [ "engi partition, 36 cores, 72 hours, 5GB/cores", "engi" ]
      - [ "im1080 partition, 20 cores, 48 hours, 5GB/core", "im1080" ]
      - [ "im1080-gpu partition, 24 cores, 48 hours, 5GB/core", "im1080-gpu" ]
      - [ "im2080 partition, 28 cores, 48 hours, 5GB/core", "im2080" ]
      - [ "im2080-gpu partition, 36 cores, 48 hours, 5GB/core", "im2080-gpu" ]
      - [ "chem partition, 36 cores, 48 hours, 5GB/core", "chem" ]
      - [ "health partition, 36 cores, 48 hours, 5GB/core", "health" ]
      - [ "hawkcpu partition, 52 cores, 48 hours, 7.4GB/core", "hawkcpu" ]
      - [ "hawkgpu partition, 48 cores, 48 hours, 4GB/core", "hawkgpu" ]
      - [ "infolab partition, 52 cores, 48 hours, 7.4GB/core", "infolab" ]
      <% if /himem/ =~ result  %>
      - [ "himem-long, 16 cores, 168 hours, 32GB/core", "himem-long"]
      <% end %>
      <% if /kwm/ =~ result  %>
      - [ "pisces partition, 48 cores, 72 hours, 6GB/core", "pisces" ]
      <% end %>
      <% if /HPCSOFT/ =~ result  %>
      - [ "himem-long, 16 cores, 168 hours, 32GB/core", "himem-long"]
      - [ "test-gpu partition, 18 cores, 72 hours, 6GB/core", "test-gpu" ]
      - [ "pisces partition, 48 cores, 72 hours, 6GB/core", "pisces" ]
      - [ "workshop", "workshop"]
      <% end %>
      - [ "debug partition, 16 cores, 1 hour, 3.5GB/core", "debug" ]
  bc_num_slots: 
    widget: "number_field"
    label: "Number of nodes"
    value: 1
    help: "Maximum number of nodes varies by partition."
    min: 1
    step: 1
  bc_num_tasks: "1"
  num_cores: 
    widget: "number_field"
    label: "Number of cpus per task"
    value: 1
    help: "Maximum number of CPU cores is 52 on hawk. By default, there is one task per node"
    min: 1
    step: 1
  bc_num_hours:
    value: 1
    min: 1
    step: 1
    help: "Maximum wall time on debug is 1 hour, otherwise 48 hours."
  bc_account:
    label: "Allocation"
    help: "Leave blank if using your default allocation."
    value: ""
  extra_jupyter_args: ""
  gpus: 
    label: "Number of GPUs"
    value: 0
    min: 0
    max: 8
    help: "Make sure you are using the correct partition above.<br />
          lts-gpu, eng-gpu, im1080-gpu: Max 2 gpus per node,<br />
          im2080-gpu: Max 4 gpus per node,<br />
          hawkgpu: Max 8 gpus per node."
form:
  - modules
  - conda_environment
  - custom_environment
  - jupyterlab_switch
  - extra_jupyter_args
  - bc_account
  - num_cores
  - bc_num_slots
  - bc_num_tasks
  - bc_num_hours
  - custom_queue
  - gpus
  - bc_email_on_started
